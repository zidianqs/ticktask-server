worker_processes  1;

error_log logs/error.log;
pid logs/nginx.pid;

events {
    worker_connections 1024;
}

# 全局配置中定义env 系统环境变量
env HOME;
env LUALIB;

http {
    # 关闭lua缓存
    lua_code_cache off;
    lua_transform_underscores_in_response_headers off;
    # 默认读取request.body
    # lua_need_request_body on;
    lua_package_path "$prefix/deps/?.lua;;";
    lua_package_cpath "/Users/hollay/.luarocks/lib/lua/5.3/?.so;;";
    init_by_lua_file lua/config.lua;

    log_format main '$http_x_forwarded_for [$time_local] "$request" '
        '$status $body_bytes_sent "$http_referer" '
        '"$http_user_agent" "$remote_addr" '
        '"$cookie_QN1" "$cookie__q" "$cookie_QN233" "$cookie_QN234"';

    server {
        listen 9099;

        set_by_lua $home_path 'return os.getenv("HOME")';

        access_log logs/access.log main;
        error_log logs/error.log info;

        location = /health_check.html {
            return 200 'OK';
        }

        # location /echo {
        #     rewrite_by_lua_block {
        #     }
        #     access_by_lua_block {
        #     }

        #     content_by_lua_file lua/echo.lua;

        #     header_filter_by_lua_block {
        #     }
        #     body_filter_by_lua_block {
        #     }

        #     log_by_lua_file lua/log.lua;
        # }

        location / {
            default_type text/html;

            # access_by_lua_file lua/filter/access.lua;
            content_by_lua_file lua/controller/index.lua;
        }
    }
}